console.log("youtube-music-desktop started");

import { BrowserWindow, app } from "electron";

import defaultConfig from "@config/defaults";
import { initializePlugins } from "@utils/plugins";
import path from "path";
import { setApplicationMenu } from "./menu";

// This allows TypeScript to pick up the magic constants that's auto-generated by Forge's Webpack
// plugin that tells the Electron app where to look for the Webpack-bundled app code (depending on
// whether you're running in development or production).
declare const MAIN_WINDOW_WEBPACK_ENTRY: string;
declare const MAIN_WINDOW_PRELOAD_WEBPACK_ENTRY: string;

// Handle creating/removing shortcuts on Windows when installing/uninstalling.
if (require("electron-squirrel-startup")) {
	app.quit();
}

const createMainWindow = () => {
	const mainWindow = new BrowserWindow({
		width: defaultConfig.windowSize.width,
		height: defaultConfig.windowSize.height,
		webPreferences: {
			nodeIntegration: true,
			contextIsolation: false,
			preload: MAIN_WINDOW_PRELOAD_WEBPACK_ENTRY,
		},
		// webPreferences: {
		// 	// preload: path.join(__dirname, "preload.ts"),
		// 	preload: MAIN_WINDOW_PRELOAD_WEBPACK_ENTRY,
		// },
		show: false,
	});
	// mainWindow.loadURL(MAIN_WINDOW_WEBPACK_ENTRY);
	mainWindow.loadURL(defaultConfig.url);
	mainWindow.once("ready-to-show", () => mainWindow.show());
	initializePlugins(mainWindow);
	setApplicationMenu(mainWindow);

	// const window1 = new BrowserWindow({
	// 	width: 800,
	// 	height: 600,
	// 	webPreferences: {
	// 		nodeIntegration: true,
	// 		contextIsolation: false,
	// 		preload: MAIN_WINDOW_PRELOAD_WEBPACK_ENTRY,
	// 	},
	// });
	// const window2 = new BrowserWindow({
	// 	width: 800,
	// 	height: 600,
	// });
	// console.log(
	// 	`file:/${path.join(
	// 		__dirname,
	// 		"../../src/components/plugins/install/index.html"
	// 	)}`
	// );
	// window1.loadURL(
	// 	`file:/${path.join(
	// 		__dirname,
	// 		"../../src/components/plugins/install/index.html"
	// 	)}`
	// );
	// window2.loadURL(
	// 	`file://${path.join(
	// 		__dirname,
	// 		"../../src/components/plugins/manage/index.html"
	// 	)}`
	// );
};

// app.whenReady()
// 	.then(() => {
// 		globalShortcut.register("Alt+CommandOrControl+Shift+I", () => {
// 			console.log("Electron loves global shortcuts!");
// 		});
// 	})
// 	.then(createMainWindow);

// This method will be called when Electron has finished
// initialization and is ready to create browser windows.
// Some APIs can only be used after this event occurs.
app.on("ready", createMainWindow);

// Quit when all windows are closed, except on macOS. There, it's common
// for applications and their menu bar to stay active until the user quits
// explicitly with Cmd + Q.
app.on("window-all-closed", () => {
	if (process.platform !== "darwin") {
		app.quit();
	}
});

app.on("activate", () => {
	// On OS X it's common to re-create a window in the app when the
	// dock icon is clicked and there are no other windows open.
	if (BrowserWindow.getAllWindows().length === 0) {
		createMainWindow();
	}
});

// In this file you can include the rest of your app's specific main process
// code. You can also put them in separate files and import them here.
